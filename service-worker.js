"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/gsound/index.html","a4779ef99c3e64423dc70e1e6937518c"],["/gsound/static/css/main.6cfa51f8.css","5536e2db8d1c305923f8e6a1ac033323"],["/gsound/static/js/main.43ed3506.js","6ab014a490ef4155df460d23db830a64"],["/gsound/static/media/album1.2711d36e.png","2711d36edbec4b0cd30a95874f2f28d9"],["/gsound/static/media/album10.cb4ca454.png","cb4ca454a686f76f78e8d7bbde451996"],["/gsound/static/media/album11.59ab3c20.png","59ab3c208f65de5d13cc239d3f67c84c"],["/gsound/static/media/album12.85bd508f.png","85bd508fcce6ad72051c447c2732e193"],["/gsound/static/media/album13.7331d0fd.png","7331d0fd31ce45b554b54ddfffc283cf"],["/gsound/static/media/album14.83b688a3.png","83b688a3be6a2d4232704971dbd10f8e"],["/gsound/static/media/album15.9cce9099.png","9cce90997d4cf86dce9aca834dc0cdf5"],["/gsound/static/media/album16.26d38312.png","26d38312b6f0d7f84a588d3098c261ab"],["/gsound/static/media/album2.70c58912.png","70c58912bd11072ffcabffa1f1a62397"],["/gsound/static/media/album3.6c9f49f0.png","6c9f49f0944640b089c5462ad435e624"],["/gsound/static/media/album4.118ed70d.png","118ed70d245f59052a2a89deb7ec9ade"],["/gsound/static/media/album5.2dec42be.png","2dec42befd8338db54b8786c903f82bc"],["/gsound/static/media/album6.54ce6219.png","54ce62195ab7072cd6af7e9678584a5e"],["/gsound/static/media/album7.3e2afce6.png","3e2afce6f5de3a60974a86d981484601"],["/gsound/static/media/album8.ed644680.png","ed6446803a0fefe006890b689c6daea0"],["/gsound/static/media/album9.0ca0012f.png","0ca0012f85841fd56879434c33056ec3"],["/gsound/static/media/gallery1.2ca83eac.png","2ca83eac3a5a0d0bcee4e0fdfa54a16e"],["/gsound/static/media/gallery2.6bcc5c2a.png","6bcc5c2ad619534183f5c7100d11d5d2"],["/gsound/static/media/gallery3.49251d57.png","49251d574c328e2dd3126403af870988"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/gsound/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});